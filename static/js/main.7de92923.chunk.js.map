{"version":3,"sources":["components/AnswersList.jsx","components/Answer.jsx","components/Chats.jsx","assets/images/LOGO-Webseisakuya.png","assets/images/NoImageProfile.jpg","components/Chat.jsx","components/Forms/TextInput.jsx","components/Forms/FormDialog.jsx","firebase/config.js","firebase/index.js","App.jsx","reportWebVitals.js","index.js"],"names":["AnswersList","props","className","answers","map","value","index","content","nextId","select","toString","useStyles","makeStyles","createStyles","backgroundColor","border","color","fontWeight","marginBottom","Answer","classes","Button","button","variant","onClick","height","padding","overflow","Chats","List","chats","id","chat","text","type","Chat","isQuestion","ListItem","ListItemAvatar","Avatar","alt","src","MyProfile","Noimage","TextInput","TextField","fullWidth","label","margin","multiline","rows","onChange","FormDialog","inputName","event","setState","name","target","inputEmail","email","inputDiscription","discription","submitForm","state","bind","Dialog","open","this","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","React","Component","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","db","firestore","App","displayNextQuestion","nextQuestionID","push","dataset","question","currentID","selectAnswer","selectedAnswer","setTimeout","handleClickOpen","test","a","document","createElement","href","click","initDataset","collection","get","then","snapshots","forEach","doc","data","prevProps","prevState","anapshot","scrollArea","getElementById","scrollTop","scrollHeight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7de92923.chunk.js","sourcesContent":["import {Answer} from './index';\n\nconst AnswersList = (props) => {\n  return (\n    <div className=\"c-grid__answer\">\n      {props.answers.map((value, index) => {\n        return <Answer content={value.content} nextId={value.nextId} key={index.toString()} select={props.select} />\n      })}\n    </div>\n  )\n}\n\nexport default AnswersList;","import { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(() => (\n  createStyles({\n    'button': {\n      backgroundColor: '#066f99',\n      border: '1px solid #ffff',\n      color: '#ffff',\n      fontWeight: 600,\n      marginBottom: '8px',\n      '&:hover': {\n        backgroundColor: '#ffff',\n        color: '#066f99'\n      }\n    }\n  })\n));\n\nconst Answer = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Button className={classes.button} variant=\"contained\" onClick={() => props.select(props.content, props.nextId)}>\n      {props.content}\n    </Button>\n  )\n}\n\nexport default Answer;","import React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport {Chat} from './index';\n\n\nconst useStyles = makeStyles(() => (\n  createStyles({\n    'chats': {\n      height: 400,\n      padding: '0',\n      overflow: 'auto'\n    }\n  })\n));\n\nconst Chats = (props) => {\n  const classes = useStyles();\n\n  return (\n    <List className={classes.chats} id=\"scroll-area\">\n      {props.chats.map((chat, index) => {\n        return <Chat text={chat.text} type={chat.type} key={index.toString()}/>\n      })}\n    </List>\n  )\n}\n\nexport default Chats;","export default __webpack_public_path__ + \"static/media/LOGO-Webseisakuya.aa1c594b.png\";","export default __webpack_public_path__ + \"static/media/NoImageProfile.d57098d6.jpg\";","import ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport MyProfile from '../assets/images/LOGO-Webseisakuya.png';\nimport Noimage from '../assets/images/NoImageProfile.jpg';\n\nconst Chat = (props) => {\n  const isQuestion = (props.type === 'question');\n  const classes = isQuestion ? 'p-chat__row' : 'p-chat__reverse';\n\n  return (\n    <ListItem className={classes}>\n      <ListItemAvatar>\n        {isQuestion ? (\n          <Avatar alt=\"icon\" src={MyProfile} />\n        ) : (\n          <Avatar alt=\"icon\" src={Noimage} />\n        )}\n      </ListItemAvatar>\n      <div className=\"p-chat__bubble\">{props.text}</div>\n    </ListItem>\n  )\n}\n\nexport default Chat;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nconst TextInput = (props) => {\n  return (\n    <TextField\n      fullWidth={true}\n      label={props.label}\n      margin={'dense'}\n      multiline={props.multiline}\n      rows={props.rows}\n      value={props.value}\n      type={props.type}\n      onChange={props.onChange}\n    />\n  )\n}\n\nexport default TextInput;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextInput from './TextInput';\n\nexport default class FormDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      discription: ''\n    }\n\n    this.inputName = this.inputName.bind(this);\n    this.inputEmail = this.inputEmail.bind(this);\n    this.inputDiscription = this.inputDiscription.bind(this);\n  }\n\n  inputName = (event) => {\n    this.setState({name: event.target.value})\n  }\n\n  inputEmail = (event) => {\n    this.setState({email: event.target.value})\n  }\n  inputDiscription = (event) => {\n    this.setState({discription: event.target.value})\n  }\n\n  submitForm = () => {\n    const name = this.state.name;\n    const email = this.state.email;\n    const discription = this.state.discription;\n\n\n  }\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">お問い合わせフォーム</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <TextInput\n              label={'お名前（必須）'}\n              multiline={false}\n              value={this.state.name}\n              type={'text'}\n              onChange={this.inputName}\n              rows={1}\n            />\n            <TextInput\n              label={'Eメール（必須）'}\n              multiline={false}\n              value={this.state.email}\n              type={'email'}\n              onChange={this.inputEmail}\n              rows={1}\n            />\n            <TextInput\n              label={'お問い合わせ内容（必須）'}\n              multiline={true}\n              value={this.state.discription}\n              type={'text'}\n              onChange={this.inputDiscription}\n              rows={5}\n            />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.props.handleClose} color=\"primary\">\n            キャンセル\n          </Button>\n          <Button onClick={this.props.handleClose} color=\"primary\" autoFocus>\n            送信する\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  }\n}","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBUALuLwOuQ7gLz357WAjue0lKkAKqWOrY\",\n    authDomain: \"chatbot-17719.firebaseapp.com\",\n    projectId: \"chatbot-17719\",\n    storageBucket: \"chatbot-17719.appspot.com\",\n    messagingSenderId: \"354043689761\",\n    appId: \"1:354043689761:web:03c87c04e186f901535c60\",\n    measurementId: \"G-WX13H7CDGL\"\n};\n\nexport default firebaseConfig;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport firebaseConfig from './config';\n\nfirebase.initializeApp(firebaseConfig);\nexport const db = firebase.firestore();","import React from 'react';\nimport './assets/styles/style.css';\nimport {AnswersList, Chats} from './components/index';\nimport FormDialog from './components/Forms/FormDialog';\nimport {db} from './firebase/index';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answers: [],\n      chats: [],\n      currentID: 'init',\n      dataset: {},\n      open: false\n    };\n\n    this.selectAnswer = this.selectAnswer.bind(this);\n    this.handleClickOpen = this.handleClickOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  displayNextQuestion = (nextQuestionID) => {\n    const chats = this.state.chats;\n    chats.push({\n      text: this.state.dataset[nextQuestionID].question,\n      type: 'question'\n    })\n\n    this.setState({\n      answers: this.state.dataset[nextQuestionID].answers,\n      chats: chats,\n      currentID: nextQuestionID\n    })\n  }\n\n  selectAnswer = (selectedAnswer, nextQuestionID) => {\n    switch(true) {\n      case (nextQuestionID === 'init'):\n        setTimeout(() => this.displayNextQuestion(nextQuestionID), 500);\n        break;\n      case (nextQuestionID === 'contact'):\n        this.handleClickOpen();\n        break;\n      case (/^https:*/.test(nextQuestionID)):\n        const a = document.createElement('a');\n        a.href = nextQuestionID;\n        a.target = '_blank';\n        a.click();\n        break;\n      default:\n        const chats = this.state.chats;\n        chats.push({\n          text: selectedAnswer,\n          type: 'answer'\n        });\n\n        this.setState({\n          chats: chats\n        });\n\n        setTimeout(() => this.displayNextQuestion(nextQuestionID), 800);\n        break;\n    }\n  }\n\n  initDataset = (dataset) => {\n    this.setState({dataset: dataset})\n  }\n\n  componentDidMount() {\n    (async() => {\n      const dataset = this.state.dataset;\n      await db.collection('questions').get().then(snapshots => {\n        snapshots.forEach(doc => {\n          const id = doc.id;\n          const data = doc.data();\n          dataset[id] = data;\n        });\n      });\n      this.initDataset(dataset);\n      const initAnswer = '';\n      this.selectAnswer(initAnswer, this.state.currentID);\n  })()\n}\n\n  componentDidUpdate(prevProps, prevState, anapshot) {\n    const scrollArea = document.getElementById('scroll-area');\n    if (scrollArea) {\n      scrollArea.scrollTop = scrollArea.scrollHeight;\n    }\n  }\n\n  handleClickOpen = () => {\n    this.setState({open: true});\n  };\n\n  handleClose = () => {\n    this.setState({open: false});\n  }\n\n  render () {\n    return (\n      <div>\n        <section className=\"c-section\">\n          <div className=\"c-box\">\n            <Chats\n              chats={this.state.chats}\n            />\n            <AnswersList\n              answers={this.state.answers}\n              select={this.selectAnswer}\n            />\n            <FormDialog open={this.state.open} handleClose={this.handleClose} />\n          </div>\n        </section>\n      </div>\n    )\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}